name: Build & Publish Docker image

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  packages: write    # нужно для push в GHCR

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set SHORT_SHA=6
        run: echo "SHORT_SHA=$(git rev-parse --short=6 $GITHUB_SHA)" >> $GITHUB_ENV

      - name: Set image name
        id: image
        run: |
          REPO=${GITHUB_REPOSITORY,,}                  # lower-case
          echo "NAME=ghcr.io/${REPO}" >> $GITHUB_ENV

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (labels & tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.NAME }}
          tags: |
            type=raw,value=sha-${{ env.SHORT_SHA }}
            type=raw,enable=${{ startsWith(github.ref, 'refs/heads/master') }},value=latest
            type=ref,event=tag
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.description=Semantic Release CLI image (Node + plugins)

      - name: Build (PR only, no push)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & Push
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

